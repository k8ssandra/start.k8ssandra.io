{
  "default": {
    "updateName": "k8ssandra",
    "updateDescription": "",
    "updateDataCenterName": "dc1",
    "addRacks": [
      {
        "name": "rack-1"
      }
    ],
    "updateTotalClusterSize": 1,
    "updateVersion": "4.0.0",
    "updateAuthentication": true,
    "updateStorageClass": "standard",
    "updateStorageAmount": 1,
    "updateHeapAmount": 1,
    "updateCpuAmount": 1,
    "updateRamAmount": 2,
    "updateMonitoringKubePrometheus": true,
    "updateStargateEnabled": true,
    "updateStargateSize": 1,
    "updateStargateRamAmount": 2,
    "updateStargateHeap": 1,
    "updateStargateCpuAmount": 1,
    "updateReaperEnabled": true,
    "updateMedusaEnabled": false,
    "updateMonitoringServiceMonitors": true,
    "updateMonitoringDashboards": true
  },
  "local": {
    "updateName": "local-dev",
    "updateDescription": "This is the template for Local build Values",
    "addRacks": [
      {
        "name": "default"
      }
    ],
    "updateDataCenterName": "dc1",
    "updateTotalClusterSize": 1,
    "updateVersion": "4.0.0",
    "updateStorageClass": "local-path",
    "updateStorageAmount": 5,
    "updateHeapAmount": 1,
    "updateCpuAmount": 1000,
    "updateRamAmount": 2,
    "updateMonitoringKubePrometheus": true,
    "updateStargateEnabled": true,
    "updateStargateSize": 1,
    "updateStargateRamAmount": 2,
    "updateStargateHeap": 1,
    "updateStargateCpuAmount": 200
  },
  "aks": {
    "updateName": "azure-aks-template",
    "updateDescription": "This is the template for AKS Values",
    "addRacks": [
      {
        "name": "eastus-1",
        "affinityLabels": { "topology.kubernetes.io/zone": "eastus-1" }
      },
      {
        "name": "eastus-2",
        "affinityLabels": { "topology.kubernetes.io/zone": "eastus-2" }
      },
      {
        "name": "eastus-3",
        "affinityLabels": { "topology.kubernetes.io/zone": "eastus-3" }
      }
    ],
    "updateDataCenterName": "dc1",
    "updateTotalClusterSize": 3,
    "updateVersion": "4.0.0",
    "updateStorageClass": "managed-premium",
    "updateStorageAmount": 2048,
    "updateHeapAmount": 31,
    "updateCpuAmount": 7000,
    "updateRamAmount": 60,
    "updateStargateEnabled": true,
    "updateStargateSize": 1,
    "updateStargateRamAmount": 32,
    "updateStargateHeap": 8,
    "updateStargateCpuAmount": 3000,
    "updateMedusaEnabled": true,
    "updateMedusaProvider": "azure_blobs",
    "updateMedusaBucketName": "prod-k8ssandra-storage-bucket",
    "updateMedusaStorageSecret": "prod-k8ssandra-medusa-key"
  },
  "dok": {
    "updateName": "digital-ocean-dok-template",
    "updateDescription": "This is the template for DOK Values",
    "addRacks": [
      {
        "name": "rack-a"
      },
      {
        "name": "rack-b"
      },
      {
        "name": "rack-c"
      }
    ],
    "updateDataCenterName": "dc1",
    "updateTotalClusterSize": 3,
    "updateVersion": "4.0.0",
    "updateStorageClass": "do-block-storage-wait",
    "updateStorageAmount": 2048,
    "updateHeapAmount": 31,
    "updateCpuAmount": 31000,
    "updateRamAmount": 55,
    "updateStargateEnabled": true,
    "updateStargateSize": 1,
    "updateStargateRamAmount": 32,
    "updateStargateHeap": 8,
    "updateStargateCpuAmount": 1000,
    "updateMedusaEnabled": true,
    "updateMedusaProvider": "s3_compatible",
    "updateMedusaS3CompatibleHost": "nyc3.digitaloceanspaces.com",
    "updateMedusaS3CompatiblePort": 443,
    "updateMedusaS3CompatibleSecure": "True",
    "updateMedusaBucketName": "k8ssandra-prod-backups",
    "updateMedusaStorageSecret": "prod-k8ssandra-medusa-key"
  },
  "eks": {
    "updateName": "amazon-eks-template",
    "updateDescription": "This is the template for EKS Values",
    "addRacks": [
      {
        "name": "us-east-1a",
        "affinityLabels": { "topology.kubernetes.io/zone": "us-east-1a" }
      },
      {
        "name": "us-east-1b",
        "affinityLabels": { "topology.kubernetes.io/zone": "us-east-1b" }
      },
      {
        "name": "us-east-1c",
        "affinityLabels": { "topology.kubernetes.io/zone": "us-east-1c" }
      }
    ],
    "updateDataCenterName": "dc1",
    "updateTotalClusterSize": 3,
    "updateVersion": "4.0.0",
    "updateStorageClass": "gp2",
    "updateStorageAmount": 2048,
    "updateHeapAmount": 31,
    "updateCpuAmount": 7000,
    "updateRamAmount": 60,
    "updateStargateEnabled": true,
    "updateStargateSize": 1,
    "updateStargateRamAmount": 32,
    "updateStargateHeap": 8,
    "updateStargateCpuAmount": 3000,
    "updateMedusaEnabled": true,
    "updateMedusaProvider": "s3",
    "updateMedusaBucketName": "prod-k8ssandra-s3-bucket",
    "updateMedusaStorageSecret": "prod-k8ssandra-medusa-key",
    "updateMedusaS3Region": "us-east-1"
  },
  "gke": {
    "updateName": "google-gke-template",
    "updateDescription": "This is the template for GKE Values",
    "addRacks": [
      {
        "name": "us-central1-a",
        "affinityLabels": { "topology.kubernetes.io/zone": "us-central1-a" }
      },
      {
        "name": "us-central1-b",
        "affinityLabels": { "topology.kubernetes.io/zone": "us-central1-b" }
      },
      {
        "name": "us-central1-c",
        "affinityLabels": { "topology.kubernetes.io/zone": "us-central1-c" }
      }
    ],
    "updateDataCenterName": "dc1",
    "updateTotalClusterSize": 3,
    "updateVersion": "4.0.0",
    "updateStorageClass": "standard-rwo",
    "updateStorageAmount": 2048,
    "updateHeapAmount": 8,
    "updateCpuAmount": 5000,
    "updateRamAmount": 50,
    "updateStargateEnabled": true,
    "updateStargateSize": 1,
    "updateStargateRamAmount": 32,
    "updateStargateHeap": 8,
    "updateStargateCpuAmount": 1000,
    "updateMedusaEnabled": true,
    "updateMedusaProvider": "google_storage",
    "updateMedusaBucketName": "prod-k8ssandra-storage-bucket",
    "updateMedusaStorageSecret": "prod-k8ssandra-medusa-key",
    "setLabelOptions": ["kubernetes.io/arch", "kubernetes.io/hostname ", "node.kubernetes.io/instance-type", "topology.kubernetes.io/region", "failure-domain.beta.kubernetes.io/region", "failure-domain.beta.kubernetes.io/zone", "topology.kubernetes.io/zone", "cloud.google.com/machine-family", "cloud.google.com/gke-nodepool"]
  }
}
